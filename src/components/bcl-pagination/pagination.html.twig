{% apply spaceless %}

{# Parameters:
  - size (string) (default: '')
    - options ['sm', 'lg']
  - alignment (string) (default: '')
    - options ['end', 'center']
  - aria_label (string) (default: '')
  - variant: (string) (default: '')
  - enable_prev_next_icon (boolean) (default: false)
  - enable_first_last_icon (boolean) (default: true)
  - first (pagination Item object) (default: {})
  - prev (pagination Item object) (default: {})
  - next (pagination Item object) (default: {})
  - last (pagination Item object) (default: {})
  - items (array of pagination Item objects) (default: [])
    format: [
    {
      - path (string) (default: '')
      - label (string) (default: '')
      - disabled (boolean) (default: false)
      - active (boolean) (default: false)
      - aria_label (string) (default: '')
      - icon (Icon component) (default: {})
      - attributes (drupal attrs)
    }
  - icon_path (string) (default: '')
  - attributes (drupal attrs)
#}

{% set _size = size|default('') %}
{% set _alignment = alignment|default('') %}
{% set _aria_label = aria_label|default('') %}
{% set _variant = variant|default('') %}
{% set _enable_prev_next_icon = enable_prev_next_icon|default(false) %}
{% set _enable_first_last_icon = enable_first_last_icon ?? true %}
{% set _first = first|default({}) %}
{% set _prev = prev|default({}) %}
{% set _next = next|default({}) %}
{% set _last = last|default({}) %}
{% set _items = items|default([]) %}
{% set _icon_path = icon_path|default('') %}
{% set _internal_items = [] %}

{% if _first is defined and _first is not empty %}
  {% set _first = _first|merge({ position: 'first' }) %}
  {% set _internal_items = _internal_items|merge([_first]) %}
{% endif %}

{% if _prev is defined and _prev is not empty %}
  {% set _prev = prev|merge({ position: 'prev' }) %}
  {% set _internal_items = _internal_items|merge([_prev]) %}
{% endif %}

{% set _internal_items = _internal_items|merge(_items) %}

{% if _next is defined and _next is not empty %}
  {% set _next = _next|merge({ position: 'next' }) %}
  {% set _internal_items = _internal_items|merge([_next]) %}
{% endif %}

{% if _last is defined and _last is not empty %}
  {% set _last = _last|merge({ position: 'last' }) %}
  {% set _internal_items = _internal_items|merge([_last]) %}
{% endif %}

{% if attributes is empty %}
  {% set attributes = create_attribute() %}
{% endif %}

{% set _classes = 'pagination' %}
{% if _size is not empty %}
  {% set _classes = _classes ~ ' pagination-' ~ _size %}
{% endif %}
{% if _variant is not empty %}
  {% set _classes = _classes ~ ' pagination--' ~ _variant %}
{% endif %}
{% if _alignment is not empty %}
  {% set _classes = _classes ~ ' justify-content-' ~ _alignment %}
{% endif %}

{% set attributes = attributes.setAttribute('role', 'navigation') %}

{% if _variant == 'glossary' %}
  {% set attributes = attributes.addClass(['bcl-glossary']) %}
{% endif %}

{% if _aria_label is not empty %}
  {% set attributes = attributes.setAttribute('aria-label', aria_label) %}
{% endif %}

<nav
  {{ attributes }}
>
  <ul class="{{ _classes }}">
  {% if _internal_items is not empty and _internal_items is iterable %}
    {% for _item in _internal_items %}
    {% set _item_class = 'page-item' %}
    {% if _item.disabled %}
      {% set _item_class = _item_class ~ ' disabled' %}
    {% endif %}
    {% if _item.active %}
      {% set _item_class = _item_class ~ ' active' %}
    {% endif %}
    <li class="{{ _item_class }}">
      {% include '@oe-bcl/bcl-pagination/pagination-item.html.twig' with _item|merge({
        enable_prev_next_icon: _enable_prev_next_icon,
        enable_first_last_icon: _enable_first_last_icon,
        icon_path: _icon_path,
      }) only %}
    </li>
    {% endfor %}
  {% endif %}
  </ul>
</nav>

{% endapply %}
