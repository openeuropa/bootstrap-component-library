#!/bin/bash
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

# Only add custom message when there is no commit source
# ($COMMIT_SOURCE is empty). Otherwise, keep the default message
# proposed by Git. Possible commit source: message, template,
# merge, squash or commit. See https://git-scm.com/docs/githooks

BRANCH=$(cat .git/HEAD  | cut -d '_' -f2)
if [[ "$BRANCH" == *"#"*"#"* ]]
then
	if [[ "$COMMIT_SOURCE" == "message" && $(cat "$COMMIT_MSG_FILE") != *"[chromatic]"* ]]
	then
		msg=$(cat "$COMMIT_MSG_FILE")
		echo "$msg" > "$COMMIT_MSG_FILE"
		echo "[skip-actions]" >> "$COMMIT_MSG_FILE"
		echo "prepare-commit-msg has added [skip-actions] to your commit message"
	fi
fi